Mortgage+
NoReligion+
OneParent_House+
Owned+
Professional+
PublicHousing+
Renting+
SocialServ+
SP_House+
Tradesperson+
Unemployed+
Volunteer,
data=election2022)
# We can use colnames(election2022) to get a big list of all the variables available
# Now we build the model
election_model <- lm(LNP_Percent~
Population+
Area+
Age00_04+
Age05_14+
Age15_19+
Age20_24+
Age25_34+
Age35_44+
Age45_54+
Age55_64+
Age65_74+
Age75_84+
Age85plus+
Anglican+
AusCitizen+
AverageHouseholdSize+
BachelorAbv+Born_Asia+
Born_MidEast+Born_SE_Europe+
Born_UK+
BornElsewhere+
Buddhism+
Catholic+
Christianity+
Couple_NoChild_House+Couple_WChild_House+
CurrentlyStudying+DeFacto+
DiffAddress+
DipCert+
EnglishOnly+
FamilyRatio+
Finance+
HighSchool+
Indigenous+
InternetUse+
Islam+
Judaism+
Laborer+
LFParticipation+
Married+
MedianAge+
MedianFamilyIncome+
MedianHouseholdIncome+
MedianLoanPay+
MedianPersonalIncome+
MedianRent+
Mortgage+
NoReligion+
OneParent_House+
Owned+
Professional+
PublicHousing+
Renting+
SocialServ+
SP_House+
Tradesperson+
Unemployed+
Volunteer,
data=election2022)
summary(election_model)
hist(election_model$residuals, col="bisque", freq=FALSE, main=NA)
lines(density(election_model$residuals), col="red")
election_model_lean <- lm(LNP_Percent~
BachelorAbv+
CurrentlyStudying+
DeFacto+
DiffAddress+
Finance+HighSchool+
Indigenous+
LFParticipation+
Married+
NoReligion,
data=election2016)
election_model_lean <- lm(LNP_Percent~
BachelorAbv+
CurrentlyStudying+
DeFacto+
DiffAddress+
Finance+HighSchool+
Indigenous+
LFParticipation+
Married+
NoReligion,
data=election2022)
summary(election_model_lean)
ggplot(election2016, aes(x = BachelorAbv, y = LNP_Percent)) +
geom_point() +
geom_smooth() +
theme_minimal()
ggplot(election2022, aes(x = BachelorAbv, y = LNP_Percent)) +
geom_point() +
geom_smooth() +
theme_minimal()
ggplot(election2022, aes(x = CurrentlyStudying, y = LNP_Percent)) +
geom_jitter() +
geom_smooth() +
theme_minimal()
ggplot(election2022, aes(x = DeFacto, y = LNP_Percent)) +
geom_jitter() +
geom_smooth() +
theme_minimal()
ggplot(election2022, aes(x = DiffAddress, y = LNP_Percent)) +
geom_jitter() +
geom_smooth() +
theme_minimal()
ggplot(election2022, aes(x = Finance, y = LNP_Percent)) +
geom_jitter() +
geom_smooth() +
theme_minimal()
ggplot(election2022, aes(x = HighSchool, y = LNP_Percent)) +
geom_jitter() +
geom_smooth() +
theme_minimal()
ggplot(election2022, aes(x = Indigenous, y = LNP_Percent)) +
geom_jitter() +
geom_smooth() +
theme_minimal()
ggplot(election2022, aes(x = LFParticipation, y = LNP_Percent)) +
geom_jitter() +
geom_smooth() +
theme_minimal()
ggplot(election2022, aes(x = Married, y = LNP_Percent)) +
geom_jitter() +
geom_smooth() +
theme_minimal()
ggplot(election2022, aes(x = NoReligion, y = LNP_Percent)) +
geom_jitter() +
geom_smooth() +
theme_minimal()
ggplot()+
geom_sf(data=ced2022)+
geom_point(data=booths, aes(x=Longitude, y=Latitude),
colour="purple", size=1, alpha=0.3, inherit.aes=FALSE) +
labs(title="Polling booths in Australia",
subtitle = " ",
caption = "Data: Australian Electoral Comission 2016",
x="",
y="") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),axis.text.x = element_blank())+
theme(axis.ticks.y = element_blank(),axis.text.y = element_blank())+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(legend.position = "right")+
theme(plot.title=element_text(face="bold",size=12))+
theme(plot.subtitle=element_text(size=11))+
theme(plot.caption=element_text(size=8)) +
xlim(c(112,157)) + ylim(c(-44,-11))
ggplot()+
geom_sf(data=ced2021)+
geom_point(data=booths, aes(x=Longitude, y=Latitude),
colour="purple", size=1, alpha=0.3, inherit.aes=FALSE) +
labs(title="Polling booths in Australia",
subtitle = " ",
caption = "Data: Australian Electoral Comission 2016",
x="",
y="") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),axis.text.x = element_blank())+
theme(axis.ticks.y = element_blank(),axis.text.y = element_blank())+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(legend.position = "right")+
theme(plot.title=element_text(face="bold",size=12))+
theme(plot.subtitle=element_text(size=11))+
theme(plot.caption=element_text(size=8)) +
xlim(c(112,157)) + ylim(c(-44,-11))
# Find the list of 2016 booth locations
booths <- read_csv("http://results.aec.gov.au/20499/Website/Downloads/GeneralPollingPlacesDownload-20499.csv", skip=1)
DT::datatable(booths)
# Find the list of 2016 booth locations
booths <- read_csv("http://results.aec.gov.au/20499/Website/Downloads/GeneralPollingPlacesDownload-20499.csv", skip=1)
head(booths, n=10)
ggplot()+
geom_sf(data=ced2021)+
geom_point(data=booths, aes(x=Longitude, y=Latitude),
colour="purple", size=1, alpha=0.3, inherit.aes=FALSE) +
labs(title="Polling booths in Australia",
subtitle = " ",
caption = "Data: Australian Electoral Comission 2016",
x="",
y="") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),axis.text.x = element_blank())+
theme(axis.ticks.y = element_blank(),axis.text.y = element_blank())+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(legend.position = "right")+
theme(plot.title=element_text(face="bold",size=12))+
theme(plot.subtitle=element_text(size=11))+
theme(plot.caption=element_text(size=8)) +
xlim(c(112,157)) + ylim(c(-44,-11))
ggplot()+
geom_sf(data=ced2021)+
geom_point(data=booths, aes(x=Longitude, y=Latitude),
colour="purple", size=1, alpha=0.3, inherit.aes=FALSE) +
labs(title="Polling booths in Australia",
subtitle = " ",
caption = "Data: Australian Electoral Comission 2016",
x="",
y="") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),axis.text.x = element_blank())+
theme(axis.ticks.y = element_blank(),axis.text.y = element_blank())+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(legend.position = "right")+
theme(plot.title=element_text(size=12))+
theme(plot.subtitle=element_text(size=11))+
theme(plot.caption=element_text(size=8)) +
xlim(c(112,157)) + ylim(c(-44,-11))
ggplot()+
geom_sf(data=ced2021)+
geom_point(data=booths, aes(x=Longitude, y=Latitude),
colour="purple", size=1, alpha=0.3, inherit.aes=FALSE) +
labs(title="Polling booths in Australia",
subtitle = " ",
caption = "Data: Australian Electoral Comission 2016",
x="",
y="") +
theme_minimal() +
theme(axis.ticks.x = element_blank(),axis.text.x = element_blank())+
theme(axis.ticks.y = element_blank(),axis.text.y = element_blank())+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(legend.position = "right")+
theme(plot.title=element_text(size=12))+
theme(plot.subtitle=element_text(size=11))+
theme(plot.caption=element_text(size=8)) +
xlim(c(112,157)) + ylim(c(-44,-11))
ggplot() +
geom_sf(data = ced2021) +
geom_point(data = booths, aes(x = Longitude, y = Latitude),
colour = "purple", size = 1, alpha = 0.3, inherit.aes = FALSE) +
labs(
title = "Polling booths in Australia",
subtitle = " ",
caption = "Data: Australian Electoral Commission 2016",
x = "",
y = ""
) +
theme_minimal() +
theme(
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "right",
plot.title = element_text(size = 12),
plot.subtitle = element_text(size = 11),
plot.caption = element_text(size = 8)
) +
xlim(c(112, 157)) +
ylim(c(-44, -11))
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% filter(year == 2022)
# Find winner
tpp_pp16 <- tpp_pp22 %>%
mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white") +
geom_point(data=tpp_pp22, aes(x=Longitude, y=Latitude, colour=winner), size=1, alpha=0.3, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% filter(year == 2022)
# Find winner
tpp_pp16 <- tpp_pp22 %>%
mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white") +
geom_point(data=tpp_pp22, aes(x=Longitude, y=Latitude, colour=winner), size=1, alpha=0.3, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
tcp_pp <- twocand_pollingbooth_download()
tcp_pp22 <- tcp_pp %>% filter(year == 2022)
# Find winner
tcp_pp_winners <- tcp_pp22 %>%
left_join(tcp_pp16 %>% dplyr::group_by(PollingPlace, DivisionNm) %>%                         summarise(TotalVotes = sum(OrdinaryVotes)),
by = c("PollingPlace", "DivisionNm")) %>%
filter(OrdinaryVotes/TotalVotes > 0.5)
# Plot
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white") +
geom_point(data=tcp_pp_winners, aes(x=Longitude, y=Latitude, colour=PartyAb), size=1, alpha=0.6, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072", "GRN" = "#33a02c", "XEN" = "#beaed4", "ON" = "#fdc086", "KAP" = "#ffff99", "IND" = "grey25")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
tcp_pp <- twocand_pollingbooth_download()
tcp_pp22 <- tcp_pp %>% filter(year == 2022)
# Find winner
tcp_pp_winners <- tcp_pp22 %>%
left_join(tcp_pp22 %>% dplyr::group_by(PollingPlace, DivisionNm) %>%                         summarise(TotalVotes = sum(OrdinaryVotes)),
by = c("PollingPlace", "DivisionNm")) %>%
filter(OrdinaryVotes/TotalVotes > 0.5)
# Plot
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white") +
geom_point(data=tcp_pp_winners, aes(x=Longitude, y=Latitude, colour=PartyAb), size=1, alpha=0.6, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072", "GRN" = "#33a02c", "XEN" = "#beaed4", "ON" = "#fdc086", "KAP" = "#ffff99", "IND" = "grey25")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
tcp_pp <- twocand_pollingbooth_download()
tcp_pp22 <- tcp_pp %>% filter(year == 2022)
# Find winner
tcp_pp_winners <- tcp_pp22 %>%
left_join(tcp_pp22 %>% dplyr::group_by(PollingPlace, DivisionNm) %>%                         summarise(TotalVotes = sum(OrdinaryVotes)),
by = c("PollingPlace", "DivisionNm")) %>%
filter(OrdinaryVotes/TotalVotes > 0.5)
head(tcp_pp_winners, n=20)
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white")
nat_data22
at_data22 <- nat_data_download(2022)
# Plot
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white") +
geom_point(data=tcp_pp_winners, aes(x=Longitude, y=Latitude, colour=PartyAb), size=1, alpha=0.6, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072", "GRN" = "#33a02c", "XEN" = "#beaed4", "ON" = "#fdc086", "KAP" = "#ffff99", "IND" = "grey25")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
nat_data22 <- nat_data_download(2022)
# Plot
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white") +
geom_point(data=tcp_pp_winners, aes(x=Longitude, y=Latitude, colour=PartyAb), size=1, alpha=0.6, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072", "GRN" = "#33a02c", "XEN" = "#beaed4", "ON" = "#fdc086", "KAP" = "#ffff99", "IND" = "grey25")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
nat_data22
nat_map22
nat_data22 <- nat_data_download(2022)
nat_map22 <- nat_map_download(2022)
# Plot
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white") +
geom_point(data=tcp_pp_winners, aes(x=Longitude, y=Latitude, colour=PartyAb), size=1, alpha=0.6, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072", "GRN" = "#33a02c", "XEN" = "#beaed4", "ON" = "#fdc086", "KAP" = "#ffff99", "IND" = "grey25")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
library(ggparliament)  # If working with parliamentary data
library(tidyverse)      # Includes dplyr, ggplot2, tidyr, purrr, and more
library(ggthemes)
library(readxl)         # Reading Excel files
library(sf)             # Spatial data handling
library(DT)
library(eechidna)
library(absmapsdata)
nat_data22 <- nat_data_download(2022)
nat_map22 <- nat_map_download(2022)
# Plot
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white") +
geom_point(data=tcp_pp_winners, aes(x=Longitude, y=Latitude, colour=PartyAb), size=1, alpha=0.6, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072", "GRN" = "#33a02c", "XEN" = "#beaed4", "ON" = "#fdc086", "KAP" = "#ffff99", "IND" = "grey25")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
nat_data22 <- nat_data_download(2022)
nat_map22 <- nat_map_download(2022)
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white") +
geom_point(data=tpp_pp22, aes(x=Longitude, y=Latitude, colour=winner), size=1, alpha=0.3, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% filter(year == 2022)
# Find winner
tpp_pp22 <- tpp_pp22 %>%
mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
head(tpp_pp22)
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% filter(year == 2022)
# Find winner
tpp_pp22 <- tpp_pp22 %>%
mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
ggplot(data=nat_data22, aes(map_id=id)) +
geom_point(data=tpp_pp22, aes(x=Longitude, y=Latitude, colour=winner), size=1, alpha=0.3, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% filter(year == 2022)
# Find winner
tpp_pp22 <- tpp_pp22 %>%
mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
ggplot(data=nat_data22, aes(map_id=id)) +
geom_point(data=tpp_pp22, aes(x=Longitude, y=Latitude, colour=winner), size=1, alpha=0.3, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
nat_data22
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% filter(year == 2022)
nat_data22 <- nat_data_download(2022)
nat_map22 <- nat_map_download(2022)
# Find winner
tpp_pp22 <- tpp_pp22 %>%
mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
ggplot(data=nat_data22, aes(map_id=id)) +
geom_point(data=tpp_pp22, aes(x=Longitude, y=Latitude, colour=winner), size=1, alpha=0.3, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
tcp_pp <- twocand_pollingbooth_download()
tcp_pp22 <- tcp_pp %>% filter(year == 2022)
# Find winner
tcp_pp_winners <- tcp_pp22 %>%
left_join(tcp_pp22 %>% dplyr::group_by(PollingPlace, DivisionNm) %>%                         summarise(TotalVotes = sum(OrdinaryVotes)),
by = c("PollingPlace", "DivisionNm")) %>%
filter(OrdinaryVotes/TotalVotes > 0.5)
nat_data22 <- nat_data_download(2022)
nat_map22 <- nat_map_download(2022)
# Plot
ggplot(data=nat_data22, aes(map_id=id)) +
geom_map(map=nat_map22, fill="grey90", colour="white") +
geom_point(data=tcp_pp_winners, aes(x=Longitude, y=Latitude, colour=PartyAb), size=1, alpha=0.6, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072", "GRN" = "#33a02c", "XEN" = "#beaed4", "ON" = "#fdc086", "KAP" = "#ffff99", "IND" = "grey25")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
tpp_pp22
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% filter(year == 2022)
nat_data22 <- nat_data_download(2022)
nat_map22 <- nat_map_download(2022)
# Find winner
tpp_pp22 <- tpp_pp22 %>%
mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
head(tpp_pp22, n=10)
ggplot(data=nat_data22, aes(map_id=id)) +
geom_point(data=tpp_pp22, aes(x=Longitude, y=Latitude, colour=winner), size=1, alpha=0.3, inherit.aes=FALSE) +
scale_color_manual("Party", values=c("LNP"="#80b1d3", "ALP"="#fb8072")) +
xlim(c(112,157)) + ylim(c(-44,-11)) +
theme_map() + coord_equal() + theme(legend.position="bottom")
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% filter(year == 2022)
nat_data22 <- nat_data_download(2022)
nat_map22 <- nat_map_download(2022)
# Find winner
tpp_pp22 <- tpp_pp22 %>%
mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
head(tpp_pp22, n=10)
tpp_pp
tpp_pp22
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% filter(year == 2021)
nat_data22 <- nat_data_download(2022)
nat_map22 <- nat_map_download(2022)
# Find winner
tpp_pp22 <- tpp_pp22 %>%
mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
head(tpp_pp22, n=10)
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% dplyr::filter(year == 2021)
head(tpp_pp22)
# nat_data22 <- nat_data_download(2022)
# nat_map22 <- nat_map_download(2022)
#
# # Find winner
# tpp_pp22 <- tpp_pp22 %>%
#   mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
#
# head(tpp_pp22, n=10)
tpp_pp <- twoparty_pollingbooth_download()
tpp_pp22 <- tpp_pp %>% dplyr::filter(year == 2022)
head(tpp_pp22)
# nat_data22 <- nat_data_download(2022)
# nat_map22 <- nat_map_download(2022)
#
# # Find winner
# tpp_pp22 <- tpp_pp22 %>%
#   mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
#
# head(tpp_pp22, n=10)
tpp_pp <- twoparty_pollingbooth_download()
tail(tpp_pp)
tpp_pp22 <- tpp_pp %>% dplyr::filter(year == 2022)
head(tpp_pp22)
# nat_data22 <- nat_data_download(2022)
# nat_map22 <- nat_map_download(2022)
#
# # Find winner
# tpp_pp22 <- tpp_pp22 %>%
#   mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
#
# head(tpp_pp22, n=10)
tpp_pp <- twoparty_pollingbooth_download()
tail(tpp_pp)
# tpp_pp22 <- tpp_pp %>% dplyr::filter(year == 2022)
#
# head(tpp_pp22)
# nat_data22 <- nat_data_download(2022)
# nat_map22 <- nat_map_download(2022)
#
# # Find winner
# tpp_pp22 <- tpp_pp22 %>%
#   mutate(winner = ifelse(ALP_Percent >= 50, "ALP", "LNP"))
#
# head(tpp_pp22, n=10)
